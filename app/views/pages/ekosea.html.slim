h2 Ekosea
p
  ' Ekosea was the first project I developped mostly alone when I worked at
  a href="https://capsens.eu" Capsens
  |.
  br
  ' Being a private project, the source code isn't available on Github but you can
  a href="https://ekosea.com" browse the live version.
  br
  | It's a crowdfunding platform where users submit projects related to the ocean. I found this exciting to work on since I used to work as a diving instructor.
  br
  | One of the requirements was that once the project is shipped, the client should be able to add pages to his site without requiring the help of a developer. That meant an extensive admin side built into the app.
  | Here is a brief list of the actions avaiable to the admin:
  markdown:
    * View and approve/reject/edit/delete projects before they are made public
    * View/edit/delete users
    * View payments (contributions)
    * Create/view/edit/delete all content on static pages including:
      * Our team
      * FAQ
      * Jobs
      * Partners
      * Ambassadors
      * Events
      * Press metions
  ' The admin side is built entirely with the
  a href= "https://github.com/activeadmin/activeadmin" active admin
  '  gem.
  ' Another aspect that was challenging was the project creation page. The client had a design in mind and was was adamant that the project creation had to be split into 6 steps. This was a problem because there were required fileds on each of the steps. This resulted in the impossibility for the user to get past step one, since submitting the project while trying to get to step two would result in step one being rendered with an error message stating that some required fields were not filled. The required fields would be on step 2, 3 or any other step, but the user couldn't possibly fill them faced with the form for step 1. (If we had been using only two steps, it would have been possible to work around this with running validation on create for step one and on update for step two. But even then this isn't a very clean approach as we end up with partially valid objects in our database.)
  ' The best solution to a multi-step object creation is to use the
  a href="https://github.com/schneems/wicked" wicked
  '  gem.

  | (A project having so many attributes, it was decided to have 2 models. A Project that would have basic attrinutes such as name,
  | Nested forms because projects is broken into several models.)
  | Otherwise it was pretty straight forward. Unlike Kickstarter, the projects are not about a product. A project can simply be "Help me fund the coral restauration program in this small village in French Polynesia". Users who chose to back a project can select a prize or reward based on the amount they contribute.
  ' In order to make the user add style, images and videos to the description of the project I used the gem
  a href="https://github.com/SammyLin/redactor-rails" redactor-rails
  |.
  | I also implemented unit tests with Rspec and Factory Girl. I had previously tested apps that I had not developed myself and the combination of being new to testing and seeing the code base for the first time resulted in slow progress. I found testing code that I wrote myself to be much faster. Of course I am not an experienced tester and sometimes what takes a while is figuring out how to write the test properly when you know for a fact it should pass. That's part of the learning process and when faced with the same issue in a different app it takes no time at all to find the solution.
  br
  | ADD SCREEN SHOTS
